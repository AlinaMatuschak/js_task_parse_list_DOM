{"version":3,"sources":["scripts/main.js"],"names":["board","document","querySelector","people","querySelectorAll","sortList","list","sort","prevSalary","salary","convertToNumber","getEmployees","map","person","name","innerText","position","dataset","age","stringOfNumber","slice","replace","peopleMap","insertAdjacentHTML","join"],"mappings":";AAAA,aA+BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7BA,IAAMA,EAAQC,SAASC,cAAc,MAC/BC,EAASF,SAASG,iBAAiB,MAEzC,SAASC,EAASC,GACTA,OAAAA,EAAKC,KAAK,SAAoD,EAAA,GAAzCC,IAAAA,EAARC,EAAAA,OACXC,OAAAA,EADmCD,EAAAA,QACLC,EAAgBF,KAIzD,SAASG,EAAaL,GACb,OAAA,EAAIA,GACRM,IAAI,SAAAC,GAAW,MAAA,CACdC,KAAMD,EAAOE,UACbC,SAAUH,EAAOI,QAAQD,SACzBP,OAAQI,EAAOI,QAAQR,OACvBS,IAAKL,EAAOI,QAAQC,OAI1B,SAASR,EAAgBS,GAChB,OAACA,EACLC,MAAM,GACNC,QAAQ,KAAM,IAGnB,IAAMC,EAAYX,EAAaR,GAE/BE,EAASiB,GAETtB,EAAMuB,mBAAmB,WAGnBD,8CAAAA,OAAAA,EAAUV,IAAI,SAAA,GAAGE,IAAAA,EAAAA,EAAAA,KAAME,EAAAA,EAAAA,SAAUP,EAAAA,EAAAA,OAAQS,EAAAA,EAAAA,IAEtBF,MAAAA,uCAAAA,OAAAA,EACFP,4BAAAA,OAAAA,EACHS,yBAAAA,OAAAA,EAEVJ,wBAAAA,OAAAA,EANU,yBAQbU,KAAK,IAXZ","file":"main.b539e341.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst board = document.querySelector('ul');\r\nconst people = document.querySelectorAll('li');\r\n\r\nfunction sortList(list) {\r\n  return list.sort(({ salary: prevSalary }, { salary: nextSalary }) => {\r\n    return convertToNumber(nextSalary) - convertToNumber(prevSalary);\r\n  });\r\n}\r\n\r\nfunction getEmployees(list) {\r\n  return [...list]\r\n    .map(person => ({\r\n      name: person.innerText,\r\n      position: person.dataset.position,\r\n      salary: person.dataset.salary,\r\n      age: person.dataset.age,\r\n    }));\r\n}\r\n\r\nfunction convertToNumber(stringOfNumber) {\r\n  return +stringOfNumber\r\n    .slice(1)\r\n    .replace(/,/g, '');\r\n}\r\n\r\nconst peopleMap = getEmployees(people);\r\n\r\nsortList(peopleMap);\r\n\r\nboard.insertAdjacentHTML('afterend', `\r\n  <h1>Sorted employees</h1>\r\n  <ul>\r\n    ${peopleMap.map(({ name, position, salary, age }) => `\r\n      <li\r\n        data-position=\"${position}\"\r\n        data-salary=\"${salary}\"\r\n        data-age=\"${age}\"\r\n      >\r\n        ${name}\r\n      </li>\r\n    `).join('')}\r\n  </ul>\r\n`);\r\n"]}